import time
import re
import numpy as np
import pandas as pd
import re

data_root = '/Users/lemon/Downloads/EE5239/Data/'

def replace_abbr(x):
    x = str(x).lower()
    # replace abbr. & proper nouns & special symbols
    x = x.replace("cannot", "can not").replace("won't", "will not") \
        .replace("can't", "can not").replace("n't", " not").replace("'ve", " have").replace("'re", " are").replace("'ll", " will").replace("'d", " would") \
        .replace("what's", "what is").replace( "who's", "who is").replace("where's", "where is").replace("when's", "when is").replace("how's", "how is") \
        .replace( "i'm", "i am").replace("it's", "it is").replace("he's", "he is").replace("she's", "she is").replace("that's", "that is").replace("there's", "there is") \
        .replace("'s", " own").replace(",000,000", "m").replace(",000", "k").replace("%", " percent ") \
        .replace("′", "'").replace("’", "'").replace("π", "pi").replace("∞", "infinity") \
        .replace("₹", " rupee ").replace("$", " dollar ").replace("€", " euro ").replace("￥", " yuan ").replace("£", "pound")\
        .replace("usa", "america").replace("u.s.a.", "america").replace("uk", "england").replace("the us", "america")
    x = re.sub(r"([0-9]+)000000", r"\1m", x)
    x = re.sub(r"([0-9]+)000", r"\1k", x)
    for symbol in "∞θ÷α•à−β∅³‘°\×™√²—–&©^®<→°™›♥←×§Â█½à…★–●â►−¢²¬░¶↑±¿▾═¦║―▓—‹─▒：¼⊕▼▪†■’▀¨▄♫☆é¯♦¤▲è¸Ã⋅‘∙）↓、│（»，♪╩╚³・╦╣╔╗▬❤ïØ¹≤‡√シし": #remove meaningless symbols
        x = x.replace(symbol, ' ')
    return x

# pre-detected spelling mistakes
spelling_mistakes = {"quikly": "quickly", "automattic": "automatic", "sweetpotato": "sweet potato", "statuscode": "status code", "applylayer": "apply layer", "aligator": "alligator", "downloands": "download", "dowloand": "download", "thougths": "thoughts", "helecopter": "helicopter", "telugul": "telugu", "unconditionaly": "unconditionally", "coompanies": "companies", "lndigenous": "indigenous", "evluate": "evaluate", "suggstion": "suggestion", "thinkning": "thinking", "concatinate": "concatenate", "constitutionals": "constitutional", "moneyback": "money back", "civilazation": "civilization", "paranoria": "paranoia", "rightside": "right side", "methamatics": "mathematics", "natual": "natural", "brodcast": "broadcast", "pleasesuggest": "please suggest", "intitution": "institution", "experinces": "experiences", "reallyreally": "really", "testostreone": "testosterone", "musceles": "muscle", "bacause": "because", "peradox": "paradox", "probabity": "probability", "collges": "college", "diciplined": "disciplined", "completeted": "completed", "lunchshould": "lunch should", "battlenet": "battle net", "dissapoint": "disappoint", "resultsnew": "results new", "indcidents": "incidents", "figuire": "figure", "protonneutron": "proton neutron", "tecnical": "technical", "patern": "pattern", "unenroll": "un enroll", "proceedures": "procedures", "srategy": "strategy", "mordern": "modern", "prepartion": "preparation", "throuhout": "throught", "academey": "academic", "instituitions": "institutions", "abadon": "abandon","compitetive": "competitive", "hypercondriac": "hypochondriac", "spiliting": "splitting", "physchic": "psychic", "flippingly": "flipping", "likelyhood": "likelihood", "armsindustry": "arms industry", " turorials": "tutorials", "photostats": "photostat", "sunconcious": "subconscious", "chemistryphysics": "chemistry physics", "secondlife": "second life", "histrorical": "historical", "disordes": "disorders", "differenturl": "differential", "councilling": " counselling", "sugarmill": "sugar mill", "relatiosnhip": "relationship", "fanpages": "fan pages", "agregator": "aggregator", "switc": "switch", "smatphones": "smartphones", "headsize": "head size", "pendrives": "pen drives", "biotecnology": "biotechnology", "borderlink": "border link", "furnance": "furnace", "competetion": "competition", "distibution": "distribution", "ananlysis": " analysis", "textile？": "textile", "howww": "how", "strategybusiness": "strategy business", "spectrun": "spectrum", "propasal": "proposal", "appilcable": "applicable", "accountwhat": " account what", "algorithems": " algorithms", "protuguese": " Portuguese", "exatly": "exactly", "disturbence": "disturbance", "govrnment": "government", "requiremnt": "requirement", "vargin": "virgin", "lonleley": "lonely", "unmateralistic": "materialistic", "dveloper": "developer", "dcuments": "documents", "techonologies": "technologies", "morining": "morning", "samsing": "Samsung", "engeeniring": "engineering", "racetrac": "racetrack", "physian": "physician", "theretell": "there tell", "tryto": "try to", "teamfight": "team fight", "recomend": "recommend", "spectables": "spectacles", "emtional": "emotional", "engeenerring": "engineering", "optionsgood": "options good", "primarykey": "primary key", "foreignkey": "foreign key", "concieved": "conceived", "leastexpensive": "least expensive", "foodtech": "food tech", "electronegetivity": "electronegativity", "polticians": "politicians", "distruptive": "disruptive", "currrent": "current", "hidraulogy": "hydrology", "californa": "California", "electrrical": "electrical", "navigationally": "navigation", "whwhat": "what", "bcos": "because", "vaccancies": "vacancies", "articels": "articles", "boilng": "boiling", "hyperintensity": "hyper intensity", "rascism": "racism", "messenging": "messaging", "cleaniness": "cleanliness", "vetenary": "veterinary", "investorswhat": "investors what", "chrestianity": "Christianity", "apporval": "approval", "repaire": "repair", "biggerchance": "bigger chance", "manufacturering": "manufacturing", "buildertrend": "builder trend", "allocatively": "allocative", "subliminals": "subliminal", "mechnically": "mechanically", "binaurial": "binaural", "naaked": "naked", "aantidepressant": "antidepressant", "geunine": "genuine", "quantitaive": "quantitative", "paticipated": "participated", "repliedjesus": "replied Jesus", "baised": "biased","worldreport": "world report", "eecutives": "executives", "paitents": "patients", "telgu": "Telugu", "nomeniculature": "nomenclature", "crimimaly": "criminally", "resourse": "resource", "procurenent": "procurement", "improvemet": "improvement", "metamers": "metamer", "tautomers": "tautomer", "knowwhen": "know when","whatdoes": "what does", "pletelets": "platelets", "pssesive": "possessive", "oxigen": "oxygen", "ethniticy": "ethnicity", "situatiation": "situation", "ecoplanet": "eco planet", "situatio": "situation", "dateing": "dating", "hostress": "hostess", "initialisation": "initialization", "hydrabd": "Hyderabad", "deppresed": "depressed", "dwnloadng": "downloading", "expirey": "expiry", "engeenering": "engineering", "hyderebad": "Hyderabad", "automatabl": "automatable", "architetureocasions": "architectureoccasions", "restaraunts": "restaurants", "recommedations": "recommendations", "intergrity": "integrity", "reletively": "relatively", "priceworthy": "price worthy", "princples": "principles", "reconigze": "recognize", "paticular": "particular", "musictheory": "music theory", "requied": "required", "netural": "natural", "fluoresent": "fluorescent", "girlfiend": "girlfriend", "develpment": "development", "eridicate": "eradicate", "techologys": "technologies", "hybridyzation": "hybridization", "ideaa": "ideas", "tchnology": "technology", "appropiate": "appropriate", "respone": "response", "celebreties": "celebrities", "exterion": "exterior", "uservoice": "user voice", "effeciently": "efficiently", "torquise": "turquoise ", "governmentand": "government and", "eletricity": "electricity", "coulums": "columns", "nolonger": "no longer", "wheras": "whereas", "infnite": "infinite", "decolourised": "no color", "onepiece": "one piece", "assignements": "assignments", "celebarted": "celebrated", "pharmacistical": "pharmaceutical", "jainsingle": "Jain single", "asssistance": "assistance", "glases": "glasses", "polymorpism": "polymorphism", "amerians": "Americans", "masquitos": "mosquitoes", "interseted": "interested", "thehighest": "the highest", "etnicity": "ethnicity", "anopportunity": "anopportunity", "multidiscipline": "multi discipline", "smartchange": "smart change", "collegefest": "college fest", "disdvantages": "disadvantages", "successfcators": "success factors", "sustitute": "substitute","caoching": "coaching", "bullyed": "bullied", "comunicate": "communicate", "prisioner": "prisoner", "tamilnaadu": "Tamil Nadu", "methodologyies": "methodologies", "tranfers": "transfers", "truenorth": "true north", "backdonation": "back donation", "oreals": "ordeals", "browsec": "browser", "solarwinds": "solar winds", "susten": "sustain", "carnegi": "Carnegie", "doesent": "doesn't", "automtotive": "automotive", "nimuselide": "nimesulide", "subsciption": "subscription", "quatrone": "Quattrone", "qatalyst": "catalyst", "vardamana": "Vardaman", "suplements": "supplements", "repore": "report", "pikettys": "Piketty", "paramilltary":"paramilitary", "aboutlastnight": "about last night", "vidyapeth": "Vidyapeeth", "extraterrestial": "extraterrestrial", "powerloom": "power loom", "zonbie": "zombie", "cococola": "Coca Cola", "hameorrhage": "hemorrhage", "abhayanand": "Abhay Anand", "romedynow": "remedy now", "couster": "counter", "encouaged": "encouraged", "toprepare": "to prepare", "eveteasing": "eve teasing", "roulete": "roulette", "sorkar": "Sarkar", "waveboard": "wave board", "acclerate": "accelerate", "togrow": "to grow", "felatio": "fellatio", "baherain": "Bahrain", "teatment": "treatment", "iwitness": "eye witness", "autoplaying": "autoplay", "twise": "twice", "timeskip": "time skip", "disphosphorus": "diphosphorus", "implemnt": "implement", "proview": "preview", "pinshoppr": "pin shoppe", "protestng": "protesting", "chromatographymass": "chromatography mass", "ncache": "cache", "dowloands": "downloads", "biospecifics": "bio specifics", "conforim": "conform", "dreft": "draft", "sinhaleseand": "Sinhalese", "swivl": "swivel", "officerjms": "officers", "refrigrant": "refrigerant", "kendras": "Kendra", "alchoholism": "alcoholism", "dollor": "dollar", "jeyalalitha": "Jayalalitha", "bettner": "better", "itemstream": "timestream", "notetaking": "note taking", "cringworthy": "cringeworthy", "easyday": "easy day", "scenessex": "scenes sex", "vivavideo": "via video", "washboth": "wash both", "textout": "text out", "createwindow": "create window", "calsium": "calcium", "biofibre": "bio fibre", "emailbesides": "email besides", "kathhi": "Kathi", "cenre": "center", "polyarmory": "polyamory", "superforecasters": "super forecasters", "blogers": "bloggers", "medicalwhich": "medical which", "iiving": "living", "pronouciation": "pronunciation", "youor": "you or", "thuderbird": "Thunderbird", "oneside": "one side","spearow": "Spearow", "aanythign": "anything", "inmaking": "in making", "datamining": "data mining", "greybus": "grey bus", "onmeter": "on meter", "biling": "billing", "fidlago": "Fidalgo", "edfice": "edifice", "microsolutions": "micro solutions", "easly": "easily", "eukarotic": "eukaryotic", "accedental": "accidental", "intercasts": "interests", "oppresive": "oppressive", "generalizably": "generalizable", "tacometer": "tachometer", "loking": "looking", "scrypt": "script", "usafter": "us after", "everyweek": "every week", "hopesthe": "hopes the", "openflow": "OpenFlow", "checkride": "check ride", "springdrive": "spring drive", "emobile": "mobile", "dermotology": "dermatology", "somatrophin": "somatropin", "saywe": "say we", "multistores": "multistory", "bolognaise": "Bolognese", "hardisk": "harddisk", "penisula": "peninsula", "refferring": "referring", "freshere": "fresher", "pokemkon": "Pokemon", "nuero": "neuro", "whosampled": "who sampled", "researchkit": "research kit", "speach": "speech", "acept": "accept", "indiashoppe": "Indian shoppe","todescribe": "to describe", "hollywod": "Hollywood", "whastup": "whassup", "kjedahls": "Kjeldahl", "lancher": "launcher", "stalkees": "stalkers", "baclinks": "backlinks", "instutional": "institutional", "wassap": "Wassup", "methylethyl": "methyl ethyl", "fundbox": "fund box", "keypoints": "key points", "particually": "particularly", "loseit": "lose it", "gowipe": "go wipe", "autority": "authority", "prinicple": "principle", "complaince": "compliance", "itnormal": "it normal", "forpeople": "for people", "chaces": "chances","yearhow": "year how", "fastcomet": "fast comet", "withadd": "with add", "omnicient": "omniscient", "tofeel": "to feel", "becauseof": "because of", "laungauage": "language", "combodia": "Cambodia", "bhuvneshwer": "Bhubaneshwar", "cognito": "Cognito", "thaelsemia": "thalassemia", "meritstore": "merit store", "masterbuate": "masturbate", "planethere": "planet here", "mostof": "most of", "shallowin": "shallow in", "wordwhen": "word when", "biodesalination": "desalination", "tendulkars": "Tendulkar", "kerja": "Kerja", "sertifikat": "certificate", "indegenous": "indigenous", "lowpage": "low page", "asend": "ascend", "leadreship": "leadership", "openlab": "open lab", "foldinghome": "folding home", "sachins": "Sachin", "pleatue": "plateau", "passwor": "password", "manisfestation": "manifestation", "valryian": "valerian", "chemotaxic": "chemotaxis", "condesending": "condescending", "spiltzvilla": "splitsville", "mammaliaforme": "mammaliaform", "instituteagra": "institute agra", "learningand": "learning and", "ramamurthynagar": "Ramamurthy Nagar", "glucoses": "glucose", "imitaion": "imitation", "awited": "awaited", "realvision": "real vision", "simslot": "sim slot", "yourr": "your", "pacjage": "package", "branchth": "branch", "magzin": "magazine", "frozon": "frozen", "codescomputational": "code computational", "tempratures": "temperatures", "neurophaphy": "neuropathy", "freezone": "free zone", "speices": "species", "compaitable": "compatible", "sensilization": "sensitization", "tuboscope": "tube scope", "gamechangers": "game changer", "windsheild": "windshield", "explorerie": "explorer", "cuccina": "Cucina", "earthstone": "hearthstone", "vocabs": "vocab", "previouse": "previous", "oneview": "one view", "relance": "reliance", "waterstop": "water stop", "imput": "input", "survivers": "survivors", "benedryl": "Benadryl", "requestparam": "request param", "typeadd": "type add", "autists":"artists", "forany": "for any", "inteview": "interview", "aphantasia": "Phantasia", "lisanna": "Lisanne","civilengineering": "civil engineering", "austrailia": "Australia", "alchoholic": "alcoholic", "adaptersuch": "adapter such", "sphilosopher": "philosopher", "calenderisation": "calendarization", "smooking": "smoking", "pemdulum": "pendulum", "analsyis": "analysis", "psycholology": "psychology", "ubantu": "ubuntu", "emals": "emails", "questionth": "questions", "jawarlal": "Jawaharlal", "svaldbard": "Svalbard", "prabhudeva": "Prabhudeva", "robtics": "robotics", "umblock": "unblock", "professionaly": "professionally", "biovault": "bio vault", "bibal": "bible", "higherstudies": "higher studies", "lestoil": "less oil", "biteshow": "bike show", "humanslike": "humans like", "purpse": "purpose", "barazilian": "Brazilian", "gravitional": "gravitational", "cylinderical": "cylindrical", "peparing": "preparing", "healthequity": "health equity", "appcleaner": "app cleaner", "instantq": "instant", "abolisihed": "abolished", "kwench": "quench", "prisamatic": "prismatic", "bhubneshwar": "Bhubaneshwar", "liscense": "license", "cyberbase": "cyber base", "safezone": "safe zone", "deactivat": "deactivate", "salicyclic": "salicylic", "cocacola": "coca cola", "noice": "noise", "examinaton": "examination", "pharmavigilance": "pharmacovigilance", "sixthsense": "sixth sense","musiclly": "musically", "khardushan": "Kardashian", "chandragupt": "Chandragupta", "bayesians": "bayesian", "engineeringbut": "engineering but", "caretrust": "care trust", "girlbut": "girl but", "aviations": "aviation", "joinee": "joiner", "tutior": "tutor", "tylenal": "Tylenol", "neccesity": "necessity", "kapsule": "capsule", "prayes": "prayers", "depositmobile": "deposit mobile", "settopbox": "set top box", "meotic":"meiotic", "accidentially": "accidentally", "offcloud": "off cloud", "keshavam": "Keshava", "domaincentral": "domain central", "onetaste": "one taste", "lumpsum": "lump sum", "medschool": "med school", "digicard": "Digi card", "abroadus": "abroad", "campusexcept": "campus except", "aptittude": "aptitude", "neutrions": "neutrinos", "onepaper": "one paper", "remidies": "remedies", "convinient": "convenient", "financaily":"financially", "postives": "positives", "nikefuel": "Nike fuel", "ingrediants": "ingredients", "aspireat": "aspirate", "firstand": "first", "mohammmad": "Mohammad", "mutliple": "multiple", "dimonatization": "demonization", "cente": "center", "marshmellow": "marshmallow", "citreon": "Citroen", "theirony": "the irony", "slienced": "silenced", "identifiy": "identify", "energ": "energy", "distribuiton": "distribution", "devoloping": "developing", "maharstra": "Maharastra", "siesmologist": "seismologist", "geckoos": "geckos", "placememnt": "placement", "introvercy": "introvert", "nuerosurgeon": "neurosurgeon", "realsense": "real sense", "congac": "cognac", "plaese": "please", "addicition": "addiction", "othet": "other", "howwill": "how will", "betablockers": "beta blockers", "phython": "Python", "concelling": "counseling", "einstine": "Einstein", "takinng": "taking", "birtday": "birthday", "prefessor": "professor", "dreamscreen": "dream screen", "satyabama": "Satyabhama", "faminism": "feminism", "noooooooooo": "no", "certifaction": "certification","smalll": "small", "sterlization": "sterilization", "athelete": "athlete", "comppany": "company", "handlebreakup": "handle a breakup", "wellrounded": "well rounded", "breif": "brief", "engginering": "engineering", "genrally": "generally", "forgote": "forgot", "compuny": "the company", "wholeseller": "wholesaler", "conventioal": "conventional", "healther": "healthier", "realitic": "realistic", "israil": "Israel", "morghulis": "Margulis", "begineer": "beginner", "unwaiveringly": "unwavering", "writen": "written", "gastly": "ghastly", "obscurial": "obscure", "permanetly": "permanently", "bday": "birthday", "studing": "studying", "blackcore": "black core", "macbok": "MacBook", "realted": "related", "resoning": "reasoning", "servicenow": "service now", "medels": "medals", "hairloss": "hair loss", "messanger": "messenger", "masterbate": "masturbate", "oppurtunities": "opportunities", "newzealand": "new zealand", "offcampus": "off campus", "lonliness": "loneliness", "percentilers": "percentiles", "caccount": "account", "imrovement": "improvement", "cashbacks": "cashback", "inhand": "in hand", "baahubali": "bahubali", "diffrent": "different", "strategywho": "strategy who", "meetme": "meet me", "wealthfront": "wealth front", "masterbation": "masturbation", "successfull": "successful", "lenght": "length", "increse": "increase", "mastrubation": "masturbation", "intresting": "interesting", "quesitons": "questions", "fullstack": "full stack", "harambe": "Harambee", "criterias": "criteria", "rajyasabha": "Rajya Sabha", "techmahindra": "tech Mahindra", "messeges": "messages", "intership": "internship", "benifits": "benefits", "dowload": "download", "dellhi": "Delhi", "traval": "travel", "prepration": "preparation", "engineeringwhat": "engineering what", "habbit": "habit", "diference": "difference", "permantley": "permanently", "doesnot": "does not", "thebest": "the best", "addmision": "admission", "gramatically": "grammatically", "dayswhich": "days which", "intrest": "interest", "seperatists":"separatists", "plagarism": "plagiarism", "demonitize": "demonetize", "explaination": "explanation", "numericals": "numerical", "defination": "definition", "inmortal": "immortal", "elasticsearch": "elastic search"}
spelling = set(spelling_mistakes)
def spelling_correction(x):
    x_new = []
    for word in x.split(' '):
        if word in spelling:
            x_new.append(spelling_mistakes[word])
        else:
            x_new.append(word)
    x = " ".join(x_new)
    return x


def preprocess(df):
    df["question1"] = df["question1"].fillna("").apply(spelling_correction)
    df["question2"] = df["question2"].fillna("").apply(spelling_correction)
    df["question1"] = df["question1"].fillna("").apply(replace_abbr)
    df["question2"] = df["question2"].fillna("").apply(replace_abbr)
    return df

tic = time.time()
print('Start processing...')
df_train = pd.read_csv(data_root + "train.csv")
df_test = pd.read_csv(data_root + "test.csv")
df_train = preprocess(df_train)
print('Saving changes to the training set...')
df_train.to_csv(data_root + "train_preprocessed.csv", index=False)
df_test = preprocess(df_test)
print('Saving changes to the test set...')
df_test.to_csv(data_root + "test_preprocessed.csv", index=False)
toc = time.time()
print('Data preprocessed in %fs' % (toc - tic))
